---
const products = [
  {
    image: "https://i.pinimg.com/736x/d5/4e/e4/d54ee47ffcab5eb68e6b2b46b2394f79.jpg",
    title: "Alitas de Pollo",
    price: "1Kg / 2,25€",
  },
  {
    image: "https://i.pinimg.com/736x/d5/4e/e4/d54ee47ffcab5eb68e6b2b46b2394f79.jpg",
    title: "Alitas de Pollo",
    price: "1Kg / 2,25€",
  },
  {
    image: "https://i.pinimg.com/736x/d5/4e/e4/d54ee47ffcab5eb68e6b2b46b2394f79.jpg",
    title: "Alitas de Pollo",
    price: "1Kg / 2,25€",
  },
  {
    image: "https://i.pinimg.com/736x/d5/4e/e4/d54ee47ffcab5eb68e6b2b46b2394f79.jpg",
    title: "Alitas de Pollo",
    price: "1Kg / 2,25€",
  },
  {
    image: "https://i.pinimg.com/736x/d5/4e/e4/d54ee47ffcab5eb68e6b2b46b2394f79.jpg",
    title: "Alitas de Pollo",
    price: "1Kg / 2,25€",
  },
  {
    image: "https://i.pinimg.com/736x/d5/4e/e4/d54ee47ffcab5eb68e6b2b46b2394f79.jpg",
    title: "Alitas de Pollo",
    price: "1Kg / 2,25€",
  },
  {
    image: "https://i.pinimg.com/736x/d5/4e/e4/d54ee47ffcab5eb68e6b2b46b2394f79.jpg",
    title: "Alitas de Pollo",
    price: "1Kg / 2,25€",
  },
  {
    image: "https://i.pinimg.com/736x/d5/4e/e4/d54ee47ffcab5eb68e6b2b46b2394f79.jpg",
    title: "Alitas de Pollo",
    price: "1Kg / 2,25€",
  },
];

---
<div class="p-4 ml-60 mt-20">
  <!-- Navegación superior -->
  <div class="flex items-center justify-between text-lg text-gray-600">
    <a href="/" class="hover:text-black transition-colors text-l">Inicio</a>
    <span class="text-gray-400">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5">
        <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
      </svg>       
    </span>
    <span class="text-black text-l">Pollería</span>
    <div class="relative ml-auto">
      <button id="dropdownButton" class="flex items-center text-lg text-gray-600 hover:text-black mr-60">
        Ordenar por defecto
        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 ml-10" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" d="m19.5 9l-7.5 7.5-7.5-7.5" />
        </svg>
      </button>
      <div id="dropdownMenu" class="absolute right-0 mr-60 mt-2 w-56 bg-white border border-gray-200 rounded-lg shadow-lg hidden">
        <ul class="space-y-2 p-2">
          <li><a href="#" class="block px-4 py-2 text-gray-700 bg-blue-100 hover:bg-blue-200" id="defaultOption">Ordenar por defecto</a></li>
          <div class="border-t border-gray-300 ml-4 mr-6"></div>
          <li><a href="#" class="block px-4 py-2 text-gray-700 hover:bg-gray-200">Precio: Bajo a Alto</a></li>
          <div class="border-t border-gray-300 ml-4 mr-6"></div>
          <li><a href="#" class="block px-4 py-2 text-gray-700 hover:bg-gray-200">Precio: Alto a Bajo</a></li>
          <div class="border-t border-gray-300 ml-4 mr-6"></div>
          <li><a href="#" class="block px-4 py-2 text-gray-700 hover:bg-gray-200">Nombre A-Z</a></li>
        </ul>
      </div>
    </div>
  </div>
</div>

<div class="border-t border-gray-300 mt-4 mb-6 ml-60 mr-60"></div>

<div class="flex mt-6">
  <!-- Filtro Lateral -->
  <div class="w-1/4 p-4 bg-gray-50 border-r border-gray-200 ml-60">
    <h2 class="text-lg font-bold mb-4 flex items-center justify-between">
      Categorías
      <!-- Botón con Flecha hacia arriba -->
      <button id="toggleCategories" class="focus:outline-none">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-gray-600">
          <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 15l-7.5-7.5-7.5 7.5" />
        </svg>
      </button>
    </h2>
    <ul id="categoriesList" class="space-y-2">
      {[{ name: "Ofertas" }, { name: "Pollería" }, { name: "Carnicería" }, { name: "Elaborados" }, { name: "Secreto Ibérico" }, { name: "Presa Ibérica"}, { name: "Cordero" }, { name: "Cerdo Manchego" }].map((category) => (
        <li class="flex items-center justify-between">
          <label class="flex items-center space-x-2">
            <input
              type="radio"
              name="category"
              class="w-4 h-4 text-green-700 focus:ring-green-700 border-gray-300"
            />
            <span class="text-sm text-gray-700">{category.name}</span>
          </label>
        </li>
      ))}
    </ul>

    <h2 class="text-lg font-bold mt-6 mb-4">Filtrar por precio</h2>
    <div class="flex items-center space-x-4">
      <input type="range" min="0" max="20" class="w-full" />
    </div>
    <p class="text-sm text-gray-700 mt-2">
      Precio: <span id="min-price">0,00€</span> — <span id="max-price">20,00€</span>
    </p>
  </div>

  <!-- Productos -->
  <div class="w-3/4 p-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mr-60">
    {products.map((product) => (
      <div class="border border-gray-200 rounded-lg shadow-md hover:shadow-lg transition-shadow max-h-72 flex flex-col">
        <img src={product.image} alt={product.title} class="w-full h-36 object-cover rounded-t-lg" />
        <div class="p-2 text-center flex flex-col flex-grow">
          <h3 class="text-2xl font-bold text-gray-800 truncate">{product.title}</h3>
          <p class="mt-1 mb-1.5 text-base text-green-600">{product.price}</p>
          <div class="flex items-center justify-center mt-auto">
            <button class="w-10 h-10 flex items-center justify-center bg-gray-800 text-white rounded-full hover:bg-green-800 transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 10.5V6a3.75 3.75 0 1 0-7.5 0v4.5m11.356-1.993 1.263 12c.07.665-.45 1.243-1.119 1.243H4.25a1.125 1.125 0 0 1-1.12-1.243l1.264-12A1.125 1.125 0 0 1 5.513 7.5h12.974c.576 0 1.059.435 1.119 1.007ZM8.625 10.5a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm7.5 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z" />
              </svg>
            </button>
          </div>
        </div>
      </div>
    ))}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const toggleButton = document.getElementById('toggleCategories');
    const categoriesList = document.getElementById('categoriesList');

    // Verificar si el botón y la lista existen antes de agregar el evento
    if (toggleButton && categoriesList) {
      // Mostrar/ocultar categorías al presionar el botón de flecha
      toggleButton.addEventListener('click', () => {
        categoriesList.classList.toggle('hidden');
      });
    }

    // El resto del código (dropdown y comportamiento del menú) sigue igual.
    const dropdownButton = document.getElementById('dropdownButton');
    const dropdownMenu = document.getElementById('dropdownMenu');
    if (dropdownButton && dropdownMenu) {
      dropdownButton.addEventListener('click', (e) => {
        dropdownMenu.classList.toggle('hidden');
        e.stopPropagation();
      });

      document.addEventListener('click', (e) => {
        if (e.target instanceof Node) {
          if (!dropdownMenu.contains(e.target) && !dropdownButton.contains(e.target)) {
            dropdownMenu.classList.add('hidden');
          }
        }
      });
    }

    const defaultOption = document.getElementById('defaultOption');
    if (dropdownMenu && defaultOption && dropdownButton) {
      const menuItems = dropdownMenu.querySelectorAll('a');
      if (menuItems) {
        menuItems.forEach(item => {
          item.addEventListener('mouseover', () => {
            menuItems.forEach(i => i.classList.remove('bg-blue-100', 'hover:bg-blue-200'));
            item.classList.add('bg-blue-100');
          });
          item.addEventListener('mouseout', () => {
            item.classList.remove('bg-blue-100');
          });
        });
      }
    }
  });
</script>

